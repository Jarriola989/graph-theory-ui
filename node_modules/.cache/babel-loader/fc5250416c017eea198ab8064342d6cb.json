{"ast":null,"code":"var _jsxFileName = \"/Users/janeth/Documents/Github/graph-theory-ui/src/GraphGenerator.js\";\nimport React, { Component } from \"react\";\n\nclass GraphGenerator extends Component {\n  constructor() {\n    super();\n\n    this.generateGraph = () => {\n      const {\n        nodeCount,\n        isDirected\n      } = this.state;\n      let result = fetch(`http://localhost:5000/create-graph`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          nodeCount: nodeCount,\n          isDirected: isDirected\n        })\n      });\n      let response = result.then(response => response.json());\n      response.then(data => this.setState({\n        graph: data.graph\n      }, console.log(data)));\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.displayNodes = node => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, node);\n    };\n\n    this.state = {\n      graph: {},\n      nodeCount: 0,\n      isDirected: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.generateGraph = this.generateGraph.bind(this);\n  }\n\n  render() {\n    const {\n      nodes\n    } = this.state;\n    const nodeList = nodes.map(node => {\n      return this.displayNodes(node);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"nodeCount\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), console.log(`nodeCount state ${this.state.nodeCount}`), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.generateGraph,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"Generate Graph\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"nodes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, nodeList));\n  }\n\n}\n\nexport default GraphGenerator;","map":{"version":3,"sources":["/Users/janeth/Documents/Github/graph-theory-ui/src/GraphGenerator.js"],"names":["React","Component","GraphGenerator","constructor","generateGraph","nodeCount","isDirected","state","result","fetch","method","headers","body","JSON","stringify","response","then","json","data","setState","graph","console","log","handleChange","e","target","id","value","displayNodes","node","bind","render","nodes","nodeList","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AACrCE,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWdC,aAXc,GAWE,MAAM;AACpB,YAAM;AAAEC,QAAAA,SAAF;AAAaC,QAAAA;AAAb,UAA4B,KAAKC,KAAvC;AACA,UAAIC,MAAM,GAAGC,KAAK,CAAE,oCAAF,EAAuC;AACvDC,QAAAA,MAAM,EAAE,MAD+C;AAEvDC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAF8C;AAGvDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAET,UAAAA,SAAS,EAAEA,SAAb;AAAwBC,UAAAA,UAAU,EAAEA;AAApC,SAAf;AAHiD,OAAvC,CAAlB;AAMA,UAAIS,QAAQ,GAAGP,MAAM,CAACQ,IAAP,CAAYD,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EAAxB,CAAf;AACAF,MAAAA,QAAQ,CAACC,IAAT,CAAcE,IAAI,IAChB,KAAKC,QAAL,CACE;AACEC,QAAAA,KAAK,EAAEF,IAAI,CAACE;AADd,OADF,EAIEC,OAAO,CAACC,GAAR,CAAYJ,IAAZ,CAJF,CADF;AAQD,KA5Ba;;AAAA,SA8BdK,YA9Bc,GA8BCC,CAAC,IAAI;AAClB,WAAKL,QAAL,CAAc;AACZ,SAACK,CAAC,CAACC,MAAF,CAASC,EAAV,GAAeF,CAAC,CAACC,MAAF,CAASE;AADZ,OAAd;AAGD,KAlCa;;AAAA,SAoCdC,YApCc,GAoCEC,IAAD,IAAU;AACvB,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,IAAN,CADF;AAGD,KAxCa;;AAEZ,SAAKtB,KAAL,GAAa;AACXa,MAAAA,KAAK,EAAE,EADI;AAEXf,MAAAA,SAAS,EAAE,CAFA;AAGXC,MAAAA,UAAU,EAAE;AAHD,KAAb;AAKA,SAAKiB,YAAL,GAAoB,KAAKA,YAAL,CAAkBO,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK1B,aAAL,GAAqB,KAAKA,aAAL,CAAmB0B,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAiCDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKzB,KAAvB;AACA,UAAM0B,QAAQ,GAAGD,KAAK,CAACE,GAAN,CAAUL,IAAI,IAAI;AACjC,aAAO,KAAKD,YAAL,CAAkBC,IAAlB,CAAP;AACD,KAFgB,CAAjB;AAGA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,EAAE,EAAC,WAFL;AAGE,MAAA,QAAQ,EAAE,KAAKN,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMGF,OAAO,CAACC,GAAR,CAAa,mBAAkB,KAAKf,KAAL,CAAWF,SAAU,EAApD,CANH,eAOE;AAAQ,MAAA,OAAO,EAAE,KAAKD,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,eAQE;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoB6B,QAApB,CARF,CADF;AAYD;;AA5DoC;;AA+DvC,eAAe/B,cAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass GraphGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      graph: {},\n      nodeCount: 0,\n      isDirected: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.generateGraph = this.generateGraph.bind(this);\n  }\n\n  generateGraph = () => {\n    const { nodeCount, isDirected } = this.state;\n    let result = fetch(`http://localhost:5000/create-graph`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ nodeCount: nodeCount, isDirected: isDirected })\n    });\n\n    let response = result.then(response => response.json());\n    response.then(data =>\n      this.setState(\n        {\n          graph: data.graph\n        },\n        console.log(data)\n      )\n    );\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  displayNodes = (node) => {\n    return (\n      <div>{node}</div>\n    )\n  }\n\n  render() {\n    const { nodes } = this.state;\n    const nodeList = nodes.map(node => {\n      return this.displayNodes(node);\n    })\n    return (\n      <div>\n        <input\n          type=\"number\"\n          id=\"nodeCount\"\n          onChange={this.handleChange}\n        ></input>\n        {console.log(`nodeCount state ${this.state.nodeCount}`)}\n        <button onClick={this.generateGraph}>Generate Graph</button>\n        <div class=\"nodes\">{nodeList}</div>\n      </div>\n    );\n  }\n}\n\nexport default GraphGenerator;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/janeth/Documents/Github/graph-theory-ui/src/GraphGenerator.js\";\nimport React, { Component } from \"react\";\n\nclass GraphGenerator extends Component {\n  constructor() {\n    super();\n\n    this.generateGraph = (nodeCount, isDirected) => {\n      let result = fetch(`http://localhost:5000/create-graph`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          nodeCount: nodeCount,\n          isDirected: isDirected\n        })\n      });\n      let response = result.then(response => response.json());\n      response.then(data => this.setState({\n        graph: data.graph\n      }));\n    };\n\n    this.state = {\n      graph: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      typ: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"Generate Graph\"));\n  }\n\n}\n\nexport default GraphGenerator;","map":{"version":3,"sources":["/Users/janeth/Documents/Github/graph-theory-ui/src/GraphGenerator.js"],"names":["React","Component","GraphGenerator","constructor","generateGraph","nodeCount","isDirected","result","fetch","method","headers","body","JSON","stringify","response","then","json","data","setState","graph","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AACrCE,EAAAA,WAAW,GAAG;AACZ;;AADY,SAOdC,aAPc,GAOE,CAACC,SAAD,EAAYC,UAAZ,KAA2B;AACzC,UAAIC,MAAM,GAAGC,KAAK,CAAE,oCAAF,EAAuC;AACvDC,QAAAA,MAAM,EAAE,MAD+C;AAEvDC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAF8C;AAGvDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,UAAAA,SAAS,EAAEA,SAAb;AAAwBC,UAAAA,UAAU,EAAEA;AAApC,SAAf;AAHiD,OAAvC,CAAlB;AAKA,UAAIQ,QAAQ,GAAGP,MAAM,CAACQ,IAAP,CAAYD,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EAAxB,CAAf;AACAF,MAAAA,QAAQ,CAACC,IAAT,CAAcE,IAAI,IAChB,KAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEF,IAAI,CAACE;AADA,OAAd,CADF;AAKD,KAnBa;;AAEZ,SAAKC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAgBDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,GAAG,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CADF;AAMD;;AA7BoC;;AAgCvC,eAAenB,cAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass GraphGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      graph: {}\n    };\n  }\n\n  generateGraph = (nodeCount, isDirected) => {\n    let result = fetch(`http://localhost:5000/create-graph`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ nodeCount: nodeCount, isDirected: isDirected })\n    });\n    let response = result.then(response => response.json());\n    response.then(data =>\n      this.setState({\n        graph: data.graph\n      })\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <input typ></input>\n        <button>Generate Graph</button>\n      </div>\n    );\n  }\n}\n\nexport default GraphGenerator;\n"]},"metadata":{},"sourceType":"module"}